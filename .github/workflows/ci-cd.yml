name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
    # Checkout the Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Python for Testing
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      # Run Linting
      - name: Run Linting Tests
        run: |
          flake8 --ignore=E501,F401 .

      # # Run Unit Tests
      # - name: Run Unit Tests
      #   run: |
      #     pytest

  build-push:
    name: Build & Push Multi-Arch Docker Image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up QEMU for Multi-Arch Support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Authenticate with Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Define Docker Image Version
      - name: Define Image Tag
        id: version
        run: |
          VERSION=v$(date +"%Y%m%d%H%M%S")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Build & Push Multi-Arch Image
      - name: Build and Push Multi-Arch Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            vigneshvicky97/flask-guestbook:${{ env.VERSION }}
            vigneshvicky97/flask-guestbook:latest
          cache-from: type=registry,ref=vigneshvicky97/flask-guestbook:latest
          cache-to: type=inline

  update-deploy:
    name: Update & Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Update Kubernetes Manifest
      - name: Update K8s Manifest
        run: |
          sed -i "s|image: vigneshvicky97/flask-guestbook:.*|image: vigneshvicky97/flask-guestbook:${{ env.VERSION }}|g" k8s/flask-deployment.yml
          cat k8s/flask-deployment.yml

      # Commit & Push Updated K8s Manifest
      - name: Commit and Push K8s Changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions Bot"
          git add k8s/flask-deployment.yml
          git commit -m "Updated image version to ${{ env.VERSION }}"
          git push origin main

      # Deploy to Kubernetes (ArgoCD Auto-Sync)
      - name: Deploy to Kubernetes (ArgoCD)
        run: |
          echo "Deployment will be auto-updated by ArgoCD."
